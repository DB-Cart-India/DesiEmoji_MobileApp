// Generated by view binder compiler. Do not edit!
package com.desiemoji.keyboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.desiemoji.keyboard.R;
import com.desiemoji.keyboard.ui.keyboard.emoji.EmojiKeyboardRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class KeyboardEmojiBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText edSearch;

  @NonNull
  public final ImageView emojiPaletteClear;

  @NonNull
  public final ImageView emojiPaletteClose;

  @NonNull
  public final RelativeLayout emojiPaletteHolder;

  @NonNull
  public final ImageView emojiPaletteSearch;

  @NonNull
  public final LinearLayout emojiPaletteTopBar;

  @NonNull
  public final ImageView emojiSearchClose;

  @NonNull
  public final EmojiKeyboardRecyclerView emojisList;

  @NonNull
  public final LinearLayout llayCategoryTabParent;

  @NonNull
  public final LinearLayout llayEmojiPaletteBottomBar;

  @NonNull
  public final LinearLayout llayEmojiPaletteTopBar;

  @NonNull
  public final LinearLayout llayEmojiPaletteTopCategoryBar;

  @NonNull
  public final RelativeLayout llayEmojiPaletteTopSearchBar;

  @NonNull
  public final LinearLayout llayList;

  private KeyboardEmojiBinding(@NonNull ConstraintLayout rootView, @NonNull EditText edSearch,
      @NonNull ImageView emojiPaletteClear, @NonNull ImageView emojiPaletteClose,
      @NonNull RelativeLayout emojiPaletteHolder, @NonNull ImageView emojiPaletteSearch,
      @NonNull LinearLayout emojiPaletteTopBar, @NonNull ImageView emojiSearchClose,
      @NonNull EmojiKeyboardRecyclerView emojisList, @NonNull LinearLayout llayCategoryTabParent,
      @NonNull LinearLayout llayEmojiPaletteBottomBar, @NonNull LinearLayout llayEmojiPaletteTopBar,
      @NonNull LinearLayout llayEmojiPaletteTopCategoryBar,
      @NonNull RelativeLayout llayEmojiPaletteTopSearchBar, @NonNull LinearLayout llayList) {
    this.rootView = rootView;
    this.edSearch = edSearch;
    this.emojiPaletteClear = emojiPaletteClear;
    this.emojiPaletteClose = emojiPaletteClose;
    this.emojiPaletteHolder = emojiPaletteHolder;
    this.emojiPaletteSearch = emojiPaletteSearch;
    this.emojiPaletteTopBar = emojiPaletteTopBar;
    this.emojiSearchClose = emojiSearchClose;
    this.emojisList = emojisList;
    this.llayCategoryTabParent = llayCategoryTabParent;
    this.llayEmojiPaletteBottomBar = llayEmojiPaletteBottomBar;
    this.llayEmojiPaletteTopBar = llayEmojiPaletteTopBar;
    this.llayEmojiPaletteTopCategoryBar = llayEmojiPaletteTopCategoryBar;
    this.llayEmojiPaletteTopSearchBar = llayEmojiPaletteTopSearchBar;
    this.llayList = llayList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static KeyboardEmojiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static KeyboardEmojiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.keyboard_emoji, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static KeyboardEmojiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ed_search;
      EditText edSearch = ViewBindings.findChildViewById(rootView, id);
      if (edSearch == null) {
        break missingId;
      }

      id = R.id.emoji_palette_clear;
      ImageView emojiPaletteClear = ViewBindings.findChildViewById(rootView, id);
      if (emojiPaletteClear == null) {
        break missingId;
      }

      id = R.id.emoji_palette_close;
      ImageView emojiPaletteClose = ViewBindings.findChildViewById(rootView, id);
      if (emojiPaletteClose == null) {
        break missingId;
      }

      id = R.id.emoji_palette_holder;
      RelativeLayout emojiPaletteHolder = ViewBindings.findChildViewById(rootView, id);
      if (emojiPaletteHolder == null) {
        break missingId;
      }

      id = R.id.emoji_palette_search;
      ImageView emojiPaletteSearch = ViewBindings.findChildViewById(rootView, id);
      if (emojiPaletteSearch == null) {
        break missingId;
      }

      id = R.id.emoji_palette_top_bar;
      LinearLayout emojiPaletteTopBar = ViewBindings.findChildViewById(rootView, id);
      if (emojiPaletteTopBar == null) {
        break missingId;
      }

      id = R.id.emoji_search_close;
      ImageView emojiSearchClose = ViewBindings.findChildViewById(rootView, id);
      if (emojiSearchClose == null) {
        break missingId;
      }

      id = R.id.emojis_list;
      EmojiKeyboardRecyclerView emojisList = ViewBindings.findChildViewById(rootView, id);
      if (emojisList == null) {
        break missingId;
      }

      id = R.id.llay_category_tab_parent;
      LinearLayout llayCategoryTabParent = ViewBindings.findChildViewById(rootView, id);
      if (llayCategoryTabParent == null) {
        break missingId;
      }

      id = R.id.llay_emoji_palette_bottom_bar;
      LinearLayout llayEmojiPaletteBottomBar = ViewBindings.findChildViewById(rootView, id);
      if (llayEmojiPaletteBottomBar == null) {
        break missingId;
      }

      id = R.id.llay_emoji_palette_top_bar;
      LinearLayout llayEmojiPaletteTopBar = ViewBindings.findChildViewById(rootView, id);
      if (llayEmojiPaletteTopBar == null) {
        break missingId;
      }

      id = R.id.llay_emoji_palette_top_category_bar;
      LinearLayout llayEmojiPaletteTopCategoryBar = ViewBindings.findChildViewById(rootView, id);
      if (llayEmojiPaletteTopCategoryBar == null) {
        break missingId;
      }

      id = R.id.llay_emoji_palette_top_search_bar;
      RelativeLayout llayEmojiPaletteTopSearchBar = ViewBindings.findChildViewById(rootView, id);
      if (llayEmojiPaletteTopSearchBar == null) {
        break missingId;
      }

      id = R.id.llay_list;
      LinearLayout llayList = ViewBindings.findChildViewById(rootView, id);
      if (llayList == null) {
        break missingId;
      }

      return new KeyboardEmojiBinding((ConstraintLayout) rootView, edSearch, emojiPaletteClear,
          emojiPaletteClose, emojiPaletteHolder, emojiPaletteSearch, emojiPaletteTopBar,
          emojiSearchClose, emojisList, llayCategoryTabParent, llayEmojiPaletteBottomBar,
          llayEmojiPaletteTopBar, llayEmojiPaletteTopCategoryBar, llayEmojiPaletteTopSearchBar,
          llayList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
